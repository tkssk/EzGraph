<h2>ダブルバッファリングとは？</h2>

<p>一般に、コンピュータを使って2次元の絵を描く場合、まず背景を描き、
その後、遠くにある物体から順に描いていきます。静止画の場合は
これで問題ありませんが、アニメーションさせる場合、背景や物体を
描写する過程が見えてしまい、画面のチラツキの原因となってしまいます。

<p>そのため、アニメーションをさせる場合は、一旦別の画面（オフスクリーンと
いいます）に描いておき、画面に一気に表示させることでこのちらつきを
なくします。このような技法をダブルバッファリングと呼びます。

<table border=0>
<tr>
	<td><img src="img/anm_sb.gif"></td>
	<td><img src="img/anm_db.gif"></td>
</tr>
<tr>
	<td>ダブルバッファリングなし</td>
	<td>ダブルバッファリングあり</td>
</table>

<p>上図の左は背景から順に描いていった場合、右はダブルバッファリングを
適用した場合のイメージです。左のアニメーションより、右のアニメーションの
方が見易いと思います。

<p>もう少し具体的に説明します。下図のようにダブルバッファリングを
用いない場合は、表示画面に背景から順に描写していきます。
例えば、空港を背景にして、飛行機が離陸する場面を描きます。
まず、背景である管制塔と滑走を描きます。次に、飛行機を描き一フレームの
描写が完成します。アニメーションをする場合は、一フレーム描き終わった後、
少し待機し、画面を消去した上で次のフレームを描きます。

<div class="center">
<img src="img/DB1.gif"><br>
<caption>ダブルバッファリングを用いない場合</caption>
</div>

<p2>一方、ダブルバッファリングを用いる場合は、背景や物体の描写は
表示画面ではなく、オフスクリーンに対して行う。そのため、
ユーザには描写の過程が見えない。全ての描写が完了した後、
オフスクリーンの内容を表示画面に一気に転送する。

<div class="center">
<img src="img/DB2.gif"><br>
<caption>ダブルバッファリングを用いる場合</caption>
</div>

<!-- ================================================================== -->
<h2>ダブルバッファリングの実現方法</h2>
<p>EzGraphでは、描写系の関数名の最後に'B'を付けるとオフスクリーンへの
描写関数になります。例えば、オフスクリーンに正円を描きたい場合は、
?EzDrawCircleB?関数になります。オフスクリーンに描写した絵を表示させる場合は、
?EzShowBuffer?関数を使用します。なお、?EzShowBuffer?関数を呼び出した後は、
オフスクリーンは黒で初期化されるので注意して下さい。

<p>具体的にサンプルコードを示します。コード全体は、
<a href="code/DblBuf1.c">ダブル・バッファリングなし</a>、
<a href="code/DblBuf2.c">ダブル・バッファリングあり</a>
からダウンロードできます。

<pre class="code">
<u>[ダブル・バッファリングなし]</u>
    /* 外壁(以前の描写オブジェクトを背景で上書き) */
    EzSetColorByPixel(255,255,0);
    EzFillBox(30,80,570,520);

    /* 座標計算 */
    bx += dx;
    by += dy;

    /* ボール描写 */
    EzSetColorByPixel(255,0,0);
    EzFillCircle(bx+50, by+100, 10);

<u>[ダブル・バッファリングあり]</u>
    /* 外壁 */
    EzSetColorByPixel(255,255,0);
    EzFillBoxB(30,80,570,520);

    /* 座標計算 */
    bx += dx;
    by += dy;

    /* ボール描写 */
    EzSetColorByPixel(255,0,0);
    EzFillCircleB(bx+50, by+100, 10);

    /* オフスクリーンのオブジェクトを表示 */
    EzShowBuffer();
</pre>

<p>
<h2>チュートリアルの目次</h2>
<ol>
<li><a href="TutBasic.html">初歩的な使い方</a>
<li><a href="TutComp.html">複雑な図形描写</a>
<li><a href="TutEvent.html">イベントドリブン</a>
<li><a href="TutDoubleBuf.html">ダブルバッファリング</a>
<li><a href="TutXPM.html">画像ファイルの表示</a>
<li><a href="TutKey.html">リアルタイムなキー入力</a>
<li><a href="TutNet.html">ネットワーク機能</a>
</ol>